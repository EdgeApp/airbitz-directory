# Airbitz

### Requirements

1. [Vagrant 1.4.x][vagrantdownload]
1. Clone airbitz.

    git clone git@github.com:airbitz/airbitz-directory.git
1. [VirtualBox](https://www.virtualbox.org/wiki/Downloads)

### Start it up

    local> cd vagrant
    local> vagrant plugin install vagrant-omnibus # install required vagrant plugin
    local> vagrant up 

### Hack away

Once the VM is up you can connect to it.

    local> vagrant ssh

Enter development environment

    vm> source ./quick_bitz.sh

Sync database

    vm> python manage.py syncdb
    vm> python manage.py migrate

Start dev server

    # Access through django dev server via http://localhost:8000/admin/
    vm> python manage.py runserver 0.0.0.0:8000

Start Celery worker

    vm> python manage.py celery worker --loglevel=info

### Coin Map data

    local> vagrant ssh
    vm> sudo pip install requests
    vm> git clone https://github.com/teneighty/coinmap.git
    vm> cd coinmap/data
    vm> ./refresh.py
    vm> cd $HOME
    vm> source ./quick_bitz.sh
    vm> python manage.py overpass_fetch $HOME/coinmap/data/data-overpass-bitcoin.json

### Load up Solr

    This will empty out your current solr database, and load all the data back in.

    vm> source ./quick_bitz.sh
    vm> python manage.py clear_index
    vm> python manage.py update_index directory
    vm> /staging/geoname_load.py $HOME/geonames/zip/US.txt

### Digital Ocean Provider

    local> vagrant plugin install vagrant-omnibus
    local> vagrant plugin install vagrant-digitalocean
    local> vagrant up --provider=digital_ocean

### Deploying to Production or Staging

    # SSH in, change into the environment and update code
    ssh user@server
    source quick_bitz.sh
    git fetch

    git reset --hard origin/deploy
    # or
    git reset --hard origin/staging

    # Copy static files and restart gunicorn
    ./manage.py collectstatic
    ./restart_gunicorn.sh
    
[vagrantdownload]: http://www.vagrantup.com/downloads.html
